affinity: {}
autoscaling:
  enabled: false
  maxReplicas: 100
  minReplicas: 1
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
deployment: {}
env:
  - name: ENVIRONMENT
    value: production
  - name: SENTRY_ENVIRONMENT
    value: prod
  - name: INTERNAL_MEDUSA_API_URL
    value: http://medusa-api
  - name: PUBLIC_MEDUSA_API_URL
    value: https://barrio-admin.lambdacurry.dev
  - name: STRIPE_PUBLIC_KEY
    value: >-
      pk_test_51Q87ZKRXtI3GfLfgD3J8Q7aQZknMYmu4wcuFeR2FIKHEbrAI6Itlv5shO9YXfnU6W7cbjRVrU9Bd6xwmXPTac3K00055MUgQGq
fullnameOverride: ''
image:
  pullPolicy: Always
  repository: ghcr.io/ghcr.io/lambda-curry/medusa2-starter/storefront
  tag: latest
imagePullSecrets:
  - name: ghcr.io
ingress:
  enabled: true
  className: 'nginx'
  annotations:
    ingress.kubernetes.io/proxy-body-size: 50m
    nginx.ingress.kubernetes.io/proxy-body-size: 10m
    nginx.org/client-max-body-size: 10m
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/tls-acme: 'true'
  hosts:
    - host: barrio.lambdacurry.dev
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: barrio-cert
      hosts:
        - barrio.lambdacurry.dev
nameOverride: storefront
nodeSelector: {}
podAnnotations: {}
podSecurityContext: {}
replicaCount: 1
resources: {}
securityContext: {}
service:
  port: 80
  type: ClusterIP
serviceAccount:
  annotations: {}
  create: false
  name: ''
tolerations: null
